// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/kubernetes-helm-minikube
{	"name": "Kubernetes - Minikube-in-Docker",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:bullseye",
	"features": { "ghcr.io/devcontainers/features/docker-in-docker:2": { "enableNonRootDocker": "true", "moby": "true"},
 "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": { "version": "latest", "helm": "latest","minikube": "latest"},
 "ghcr.io/devcontainers/features/common-utils:2": { "installZsh": true,"configureZshAsDefaultShell": true,"installOhMyZsh": true,"upgradePackages": true,"username": "automatic","userUid": "1000","userGid": "automatic"},
 "ghcr.io/devcontainers/features/git:1": { "ppa": true, "version": "latest"},
 "ghcr.io/devcontainers/features/sshd:1": { "version": "latest"},
 "ghcr.io/iterative/features/dvc:1": {},
 "ghcr.io/devcontainers-contrib/features/actions-runner:1": { "version": "latest", "dotnetVersion": "latest"},
 "ghcr.io/devcontainers-contrib/features/ansible:2": { "version": "latest"},
// "ghcr.io/devcontainers-contrib/features/apt-get-packages:1": { "clean_ppas": true, "preserve_apt_list": true,"packages": "build-essential","ppas": "ppa:deadsnakes/ppa"},
 "ghcr.io/devcontainers-contrib/features/asdf-package:1": { "plugin": "act","version": "latest",	"pluginRepo": "https://github.com/grimoh/asdf-act.git"},
 "ghcr.io/devcontainers-contrib/features/bikeshed:2": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/bin:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/btm:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/ccache-asdf:2": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/cmctl-asdf:2": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/datasette:2": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/dua:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/duf:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/eget:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/exa:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/fd:1": { "version": "latest"},
// "ghcr.io/devcontainers-contrib/features/fkill:2": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/fzf:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/gdbgui:2": {"version": "latest"},
 "ghcr.io/devcontainers-contrib/features/joern-sdkman:2": { "version": "latest","jdkVersion": "latest","jdkDistro": "ms"},
 "ghcr.io/devcontainers-contrib/features/mkcert:1": { "version": "latest"},
 "ghcr.io/devcontainers-contrib/features/mlocate-apt-get:1": {},
 "ghcr.io/devcontainers-contrib/features/ncdu:1": {},
 "ghcr.io/devcontainers-contrib/features/neofetch:1": {},
 "ghcr.io/christophermacgown/devcontainer-features/direnv:1": { "autoEnable": true, "architecture": "amd64", "version": "latest"},
 "ghcr.io/jungaretti/features/make:1": {},
 "ghcr.io/dhoeric/features/act:1": {},
 //"ghcr.io/devcontainers-contrib/features/podman-homebrew:1": { "version": "latest"},
//  "ghcr.io/devcontainers-contrib/features/renovate-cli:2": { "version": "latest"},
  "ghcr.io/devcontainers-contrib/features/schemacrawler-sdkman:2": { "version": "latest","jdkVersion": "latest","jdkDistro": "ms"},
//  "ghcr.io/devcontainers-contrib/features/sentinel-asdf:2": { "version": "latest"},
//  "ghcr.io/devcontainers-contrib/features/stew:1": { "version": "latest"},
//  "ghcr.io/devcontainers-contrib/features/svu-asdf:2": { "version": "latest"},
  "ghcr.io/devcontainers-contrib/features/tldr:2": { "version": "latest"},
  "ghcr.io/devcontainers-contrib/features/tmux-apt-get:1": {},
  "ghcr.io/devcontainers-contrib/features/vtop:2": { "version": "latest"},
//  "ghcr.io/devcontainers-contrib/features/wget-apt-get:1": {},
  "ghcr.io/devcontainers-contrib/features/yt-dlp:2": { "version": "latest"},
//  "ghcr.io/devcontainers-contrib/features/zig:1": { "version": "latest"},
  "ghcr.io/guiyomh/features/just:0": { "version": "latest"},
//  "ghcr.io/mikaello/devcontainer-features/modern-shell-utils:1": {},
  "ghcr.io/eliises/devcontainer-features/devcontainers-cli:1": { "version": "latest", "nodeVersion": "latest"},
  "ghcr.io/wxw-matt/devcontainer-features/command_runner:0": {},
  "ghcr.io/wxw-matt/devcontainer-features/script_runner:0": {}
}
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "kubectl version",

	// Use 'postStartCommand' to run commands after the container is created like starting minikube.
	// "postStartCommand": "nohup bash -c 'minikube start &' > minikube.log 2>&1",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
